ARG PROJECT="dart-grpc-logger"

ARG GOLANG_VERSION="1.20.4"

ARG VERS="23.4"
ARG ARCH="linux-x86_64"

FROM golang:${GOLANG_VERSION} as build

# Installs protoc and plugins: (golang) protoc-gen-go
ARG VERS
ARG ARCH
RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${VERS}/protoc-${VERS}-${ARCH}.zip --output-document=/protoc-${VERS}-${ARCH}.zip && \
    apt update && apt install -y unzip && \
    unzip -o /protoc-${VERS}-${ARCH}.zip -d /protoc-${VERS}-${ARCH} && \
    rm /protoc-${VERS}-${ARCH}.zip && \
    mv /protoc-${VERS}-${ARCH}/bin/* /usr/local/bin && \
    mv /protoc-${VERS}-${ARCH}/include/* /usr/local/include && \
    go get -u github.com/golang/protobuf/protoc-gen-go

ARG PROJECT
WORKDIR /${PROJECT}

# Generates the Golang protobuf files
RUN protoc \
    --proto_path=./protos \
    --go_out=plugins=grpc,module=${REPO}:. \
    ./protos/*.proto

COPY go.mod go.mod
COPY go.sum go.sum

RUN go mod download

COPY cmd/server cmd/server

RUN CGO_ENABLED=0 GOOS=linux \
    go build -a -installsuffix cgo \
    -o /go/bin/server \
    ./cmd/server


FROM gcr.io/distroless/static

LABEL org.opencontainers.image.source https://github.com/dazwilkin/dart-grpc-logger

COPY --from=build /go/bin/server /

USER 999

EXPOSE 50051

ENTRYPOINT ["/server"]
CMD ["--grpc_endpoint=:50051"]