ARG PROJECT="dart-grpc-logger"

ARG GOLANG_VERSION="1.24"

ARG VERS="30.0"
ARG ARCH="linux-x86_64"

FROM docker.io/golang:${GOLANG_VERSION} AS build

ARG PROJECT
WORKDIR /${PROJECT}

# go get protoc-gen-go requires go.mod
COPY go.mod go.mod
COPY go.sum go.sum

RUN go mod download

# Installs protoc and plugins: (golang) protoc-gen-go
ARG VERS
ARG ARCH
RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${VERS}/protoc-${VERS}-${ARCH}.zip --output-document=/protoc-${VERS}-${ARCH}.zip && \
    apt update && apt install -y unzip && \
    unzip -o /protoc-${VERS}-${ARCH}.zip -d /protoc-${VERS}-${ARCH} && \
    rm /protoc-${VERS}-${ARCH}.zip && \
    mv /protoc-${VERS}-${ARCH}/bin/* /usr/local/bin && \
    mv /protoc-${VERS}-${ARCH}/include/* /usr/local/include && \
    go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

RUN which protoc-gen-go && \
    protoc-gen-go --version

# Copy Protobuf(s)
COPY protos/logger.proto protos/logger.proto

# Generates the Golang protobuf files
ENV MODULE="github.com/DazWilkin/${PROJECT}"

RUN echo ${MODULE}

RUN protoc \
    --proto_path=${PWD}/protos \
    --go_out=${PWD} \
    --go_opt=module=${MODULE} \
    --go-grpc_out=${PWD} \
    --go-grpc_opt=module=${MODULE} \
    ${PWD}/protos/*.proto

COPY cmd/server cmd/server

RUN CGO_ENABLED=0 GOOS=linux \
    go build -a -installsuffix cgo \
    -o /go/bin/server \
    ./cmd/server


FROM gcr.io/distroless/static

LABEL org.opencontainers.image.source=https://github.com/DazWilkin/dart-grpc-logger

COPY --from=build /go/bin/server /

USER 999

EXPOSE 50051

ENTRYPOINT ["/server"]
CMD ["--grpc_endpoint=:50051"]
